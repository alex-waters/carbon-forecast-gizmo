{"version":3,"sources":["carbon-intensity-widget.js"],"names":["document","window","undefined","leadingZero","n","createBanding","amount","number","colour","letter","todayOrTomorrow","isSameOrBefore","tomorrow","moment","endOf","time","placeholderWrapper","style","target","className","placeholders","width","querySelector","maxWidth","innerHTML","appendChild","template","setAttributeNS","data","lowest","plugTemplate","message","b","length","day","tomorrowCounter","from","createElement","svg","parentElement","borderLeft","e","banding","highest","createTextNode","tz","format","intensity","c","to","console","warn","error","average","color","stroke","carbonForecasts","getElementsByClassName","fill","start","top","timeFormat","duration","timeBlock","timeInUTC","timeLocal","localHour","UTCHour","backgroundColor","roundedHour","i","status","getAttribute","response","parse","responseText","startOf","send","parseInt","end","add","createPlaceholders","request","XMLHttpRequest","open","onreadystatechange","this","readyState","JSON","populatePlaceholders","_loop"],"mappings":"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","file":"carbon-intensity-widget.js","sourcesContent":["(function(document, window, undefined) {\r\n\r\n    let leadingZero = function (n) {\r\n        return (n < 10) ? (\"0\" + n) : n;\r\n    };\r\n\r\n    let createBanding = function(amount) {\r\n         if ( amount > 400) {\r\n            return {\r\n                colour: '#EE3350',\r\n                number: 8,\r\n                letter: 'VH'\r\n            };\r\n        }\r\n        else if ( amount > 300) {\r\n            return {\r\n                colour: '#F89834',\r\n                number: 6,\r\n                letter: 'H'\r\n            };\r\n        }\r\n        else if ( amount > 200) {\r\n            return {\r\n                colour: '#FFE600   ',\r\n                number: 4,\r\n                letter: 'M'\r\n            };\r\n        }\r\n        else if ( amount > 100) {\r\n            return {\r\n                colour: '#74C050',\r\n                number: 2,\r\n                letter: 'L'\r\n            };\r\n        }\r\n        else if ( amount > 0) {\r\n            return {\r\n                colour: '#74C050',\r\n                number: 0,\r\n                letter: 'VL'\r\n            };\r\n        };\r\n    };\r\n\r\n    let todayOrTomorrow = (time) => {\r\n        let tomorrow = moment().endOf('day');;\r\n        if (moment(time).isSameOrBefore(tomorrow)) {\r\n            return 'today';\r\n        }\r\n        else {\r\n            return 'tomorrow';\r\n        }\r\n    };\r\n\r\n    let createPlaceholders = function(target, amount) {\r\n        let placeholderWrapper = document.createElement('section');\r\n            placeholderWrapper.className = 'wrapper';\r\n            placeholderWrapper.style.width = ( (7 * amount) * 16 ) + 'px';\r\n            document.querySelector('.logos').style.maxWidth = ( (7 * amount) * 16 ) + 'px';\r\n\r\n            let placeholders = ''\r\n            for (let a = 0; a < amount; a++) {\r\n                placeholders +=\r\n                    `<div class=\"hour\">\r\n                        <p class=\"timestamp\"><time></time></p>\r\n                        <svg class=\"inactive icon--house\" width=\"149\" height=\"146\" viewBox=\"0 0 149 146\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path d=\"M26 53.196L3 77h23v66h98V77h22L74.5 3 44 34.566V16H26v37.196z\" stroke=\"#676767\" stroke-width=\"7\" fill=\"rgba(255,255,255,1)\" fill-rule=\"evenodd\" stroke-linejoin=\"round\">\r\n                                <title>House</title>\r\n                            </path>\r\n                            <text x=\"59\" y=\"105\" font-family=\"'Open Sans', sans-serif\" font-size=\"40\" fill=\"#000\"></text>\r\n                        </svg>\r\n                    </div>`;\r\n            }\r\n            placeholderWrapper.innerHTML += placeholders;\r\n\r\n        target.appendChild(placeholderWrapper);\r\n    };\r\n\r\n    let populatePlaceholders = function(target, data) {\r\n        let svg = target.querySelectorAll('svg');\r\n        let time = target.querySelectorAll('time');\r\n        let highest = 'uninitiated';\r\n        let lowest = 'uninitiated';\r\n\r\n        let plugTemplate = function(colour, message) {\r\n            let boxWidth = 49;\r\n            let boxHeight = 59;\r\n            let template = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\r\n\r\n                template.setAttributeNS (null, 'viewBox', '0 0 ' + boxWidth + ' ' + boxHeight);\r\n                template.setAttributeNS (null, 'width', boxWidth);\r\n                template.setAttributeNS (null, 'height', boxHeight);\r\n                template.setAttributeNS(null, 'class', 'icon--plug');\r\n                template.innerHTML = `<g fill=\"none\" fill-rule=\"evenodd\">\r\n                                        <path d=\"M24.5 59V41.5M14 22V0M36 22V0\" stroke=\"${colour}\" stroke-width=\"9\" fill=\"${colour}\"/>\r\n                                        <path d=\"M.005 16c-.003.166-.005.333-.005.5C0 30.583 10.97 42 24.5 42S49 30.583 49 16.5c0-.167-.002-.334-.005-.5H.005z\" fill=\"${colour}\" />\r\n                                        </g>\r\n                                    </svg>`;\r\n\r\n            return [ template,  document.createTextNode(message) ];\r\n        };\r\n\r\n        let tomorrowCounter = false;\r\n        for (let b = 0; b < data.length; b++) {\r\n            // console.log(data[b].from, moment(data[b].from).tz('Europe/London').format('ha'), todayOrTomorrow(data[b].from));\r\n            let day = \"\";\r\n\r\n            if (tomorrowCounter === false) {\r\n                if (todayOrTomorrow(data[b].from) === 'tomorrow') {\r\n                    tomorrowCounter = true;\r\n                    try {\r\n                        svg[b].parentElement.style.borderLeft = '2px dotted #999';\r\n                    }\r\n                    catch(e) {\r\n                        console.warn(e);\r\n                    }\r\n                    day = document.createElement('b');\r\n                    let dayText = document.createTextNode( moment(data[b].from).tz('Europe/London').format('dddd') );\r\n                    day.appendChild( dayText );\r\n                }\r\n            }\r\n\r\n            time[b].appendChild(\r\n                document.createTextNode(\r\n                    moment(data[b].from).tz('Europe/London').format('ha')\r\n                    + ' - '\r\n                    + moment(data[b].to).tz('Europe/London').format('ha')\r\n                )\r\n            );\r\n\r\n            if (day !== \"\") {\r\n                time[b].appendChild(day);\r\n            }\r\n        }\r\n\r\n        for (let c = 0; c < data.length; c++) {\r\n            try {\r\n                let banding = createBanding(data[c].intensity.average);\r\n\r\n                if (highest === 'uninitiated') {\r\n                    highest = c;\r\n                }\r\n                else if ( data[c].intensity.average > data[highest].intensity.average) {\r\n                    highest = c;\r\n                };\r\n\r\n                if (lowest === 'uninitiated') {\r\n                    lowest = c;\r\n                }\r\n                else if ( data[c].intensity.average < data[lowest].intensity.average) {\r\n                    lowest = c;\r\n                };\r\n\r\n                svg[c].querySelector('path').style.stroke = banding.colour;\r\n                svg[c].querySelector('title').innerHTML = data[c].intensity.average + 'g CO₂ per kWh';\r\n                svg[c].querySelector('text').appendChild(document.createTextNode(banding.letter));\r\n                svg[c].querySelector('text').style.fill = '#676767';\r\n                svg[c].style.top = (9 - banding.number) + 'em';\r\n            }\r\n            catch (error) {\r\n                if (error) {\r\n                    console.warn(error)\r\n                    time[c].appendChild( document.createTextNode(' (Forecast not yet available)') );\r\n                    svg[c].querySelector('text').appendChild(document.createTextNode('?'))\r\n                    svg[c].querySelector('text').style.fill = '#ccc';\r\n                    throw error;\r\n                }\r\n            }\r\n\r\n            time[c].style.color = '#333';\r\n        }\r\n\r\n        time[highest].parentElement.appendChild( plugTemplate('#EE3350', 'Unplug')[0] );\r\n        time[highest].parentElement.appendChild( plugTemplate('#EE3350', 'Unplug')[1] );\r\n        time[lowest].parentElement.appendChild( plugTemplate('#74C050', 'Plug in')[0] );\r\n        time[lowest].parentElement.appendChild( plugTemplate('#74C050', 'Plug in')[1] );\r\n        time[lowest].parentElement.parentElement.style.backgroundColor = '#d6e8ce';\r\n        time[highest].parentElement.parentElement.style.backgroundColor = '#ffd3da';\r\n    };\r\n\r\n    let carbonForecasts = document.getElementsByClassName('carbon-forecast');\r\n\r\n    for (let i = 0; i < carbonForecasts.length; i++) {\r\n        let start;\r\n        let end;\r\n        let timeFormat = 'YYYY-MM-DD\\THH\\:mm';\r\n        let duration = 24;\r\n        let timeBlock = 2;\r\n\r\n        // if (carbonForecasts[i].getAttribute('data-duration')) {\r\n        //     duration = carbonForecasts[i].getAttribute('data-duration');\r\n        // }\r\n        // else {\r\n            // duration = 24;\r\n        // }\r\n\r\n        if (carbonForecasts[i].getAttribute('data-from')) {\r\n            start = moment(carbonForecasts[i].getAttribute('data-from') ).startOf('hour').tz('UTC').format(timeFormat);\r\n        }\r\n        else {\r\n            let timeInUTC = moment().startOf('hour').tz('UTC');\r\n            let timeLocal = moment().startOf('hour').tz('Europe/London');\r\n            let localHour = timeLocal.format('HH');\r\n            let UTCHour = timeInUTC.format('HH');\r\n            let roundedHour;\r\n\r\n            if (parseInt(localHour) % 2 === 0) {\r\n                // is even\r\n                roundedHour = parseInt(UTCHour);\r\n            }\r\n            else {\r\n                // is odd\r\n                roundedHour = parseInt(UTCHour) - 1;\r\n            }\r\n\r\n            start = timeInUTC.format('YYYY-MM-DD\\T') + leadingZero(roundedHour) + ':00';\r\n        }\r\n        end = moment(start).add(duration, 'hours').tz('UTC').format(timeFormat);\r\n        createPlaceholders(carbonForecasts[i], duration / timeBlock);\r\n\r\n        let request = new XMLHttpRequest();\r\n            request.open('GET', 'https://k1nehbcl85.execute-api.eu-west-2.amazonaws.com/v1/intensity/stats/' + start + '/' + end + '/' + timeBlock, true);\r\n            request.onreadystatechange = function() {\r\n                if (this.readyState === 4) {\r\n                    if (this.status >= 200 && this.status < 400) {\r\n                        let response = JSON.parse(this.responseText);\r\n                        populatePlaceholders(carbonForecasts[i], response.data);\r\n                    } else {\r\n                        // Error :(\r\n                    }\r\n                }\r\n            };\r\n            request.send();\r\n            request = null;\r\n    }\r\n})(document, window);"]}